{
  "name": "il2missionplanner-revived",
  "version": "3.0.0",
  "description": "Il-2 Mission Planner Revived",
  "main": "index.html",
  "type": "module",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/serverror/il2missionplanner.com.git"
  },
  "author": "Erik Servili <serverror@serverror.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/serverror/il2missionplanner.com/issues"
  },
  "homepage": "https://github.com/serverror/il2missionplanner.com#readme",
  "dependencies": {
    "font-awesome": "^4.7.0",
    "leaflet": "^1.9.4",
    "leaflet-draw": "^1.0.4",
    "leaflet-modal": "^0.2.0",
    "leaflet-polylinedecorator": "^1.6.0",
    "leaflet-textpath": "^1.2.3",
    "validatinator": "^2.0.8",
    "skeleton-css": "^2.0.4",
    "file-saver": "^2.0.5"
  },
  "devDependencies": {
    "esbuild": "^0.25.0",
    "chai": "^5.2.0",
    "clean-css": "^5.3.3",
    "clean-css-cli": "^5.6.3",
    "concurrently": "^9.1.2",
    "jshint": "^2.13.6",
    "livereload": "^0.9.3",
    "mocha": "^11.1.0",
    "nyc": "^17.1.0",
    "serve": "^14.2.4",
    "watch-run": "^1.2.5",
    "xhr-mock": "^2.5.1"
  },
  "scripts": {
    "coverage": "./node_modules/.bin/nyc cover ./node_modules/.bin/_mocha app/js/**/*.test.mjs",
    "test": "mocha app/js/**/*.test.js",
    "lint": "",
    "lintbak": "jshint app/js/**.js",
    "clean": "rm -rf dist",
    "tilefolder": "mkdir -p tile-temp && mkdir -p dist/tiles",
    "tileclone": "git clone https://github.com/ServError/tiles.il2missionplanner.com.git tile-temp || git -C tile-temp pull",
    "tilemove": "cp -R tile-temp/dist/* dist/tiles && rm -rf tile-temp",
    "esbuild": "esbuild app/js/index.js --bundle --loader:.svg=dataurl --loader:.ttf=dataurl --loader:.woff2=dataurl --loader:.woff=dataurl --loader:.eot=dataurl --loader:.png=dataurl --loader:.html=text --minify --outfile=dist/index.js",
    "esbuild:dev": "esbuild app/js/index.js --bundle --loader:.svg=dataurl --loader:.ttf=dataurl --loader:.woff2=dataurl --loader:.woff=dataurl --loader:.eot=dataurl --loader:.png=dataurl --loader:.html=text --sourcemap --outfile=dist/index.js",
    "copy:img": "mkdir -p dist/img; cp app/img/dist/* dist/img/",
    "copy:html": "cp app/index.html dist/index.html",
    "copy:conf": "cp conf/conf.json dist/conf.json",
    "copy": "mkdir -p dist && npm run copy:img && npm run copy:html && npm run copy:conf",
    "dist:js:dev": "npm run lint && npm test && npm run esbuild:dev",
    "dist:js": "npm run lint && npm test && npm run esbuild",
    "dist:dev": "npm run copy && npm run dist:js:dev && npm run dist:css",
    "dist": "npm run copy && npm run dist:js && npm run dist:css",
    "tiles": "npm run tilefolder && npm run tileclone && npm run tilemove",
    "build": "npm run dist",
    "start": "npm run develop",
    "watch:conf": "watch-run -p 'conf/conf.json' npm run dist:js:dev",
    "watch:css": "watch-run -p 'app/css/**/*.css' npm run dist:css",
    "watch:index": "watch-run -p 'app/index.html' npm run copy:html",
    "watch:js": "watch-run -p 'app/js/**/*.js' npm run dist:js:dev",
    "watch:html": "watch-run -p 'app/html/**/*.html' npm run dist:js:dev",
    "watch:img": "watch-run -p 'app/img/dist/*' npm run copy:img",
    "develop": "npm run clean && npm run dist:dev && concurrently \"npm run watch:conf\" \"npm run watch:css\" \"npm run watch:index\" \"npm run watch:js\" \"npm run watch:html\" \"npm run watch:img\" \"npm run reload\" \"serve dist\"",
    "dist:css": "",
    "dist:cssbak": "cleancss -o dist/index.css app/css/index.css",
    "nodist": "npm run lint && npm test",
    "reload": "livereload ./dist/"
  }
}
